// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

enum Role {
    OWNER
    ADMIN
    USER
}

model User {
    id               String             @id @default(uuid())
    isBanned         Boolean            @default(false)
    bannedById       String?
    isSuspened       Boolean            @default(false)
    suspendedAt      DateTime?
    suspendedReason  String?
    suspendedUntil   DateTime?
    bannedAt         DateTime?
    bannedReason     String?
    streamerMode     Boolean            @default(false)
    role             Role               @default(USER)
    isVerified       Boolean            @default(false)
    lastLogin        DateTime           @default(now())
    lastUpload       DateTime           @default(now())
    theme            String             @default("system")
    createdAt        DateTime           @default(now())
    updatedAt        DateTime           @updatedAt
    Upload           Upload[]
    IntergationToken IntergationToken[]
    ActionLog        ActionLog[]

    @@index([isBanned], name: "isBanned")
    @@index([isSuspened], name: "isSuspened")
}

model Upload {
    id            String      @id @default(uuid())
    uploader      User        @relation(fields: [uploaderId], references: [id])
    uploaderId    String
    name          String
    fileName      String
    fileExtension String
    fileSize      Int         @default(0) // in bytes
    fileType      String
    fileUrl       String
    deleteToken   String      @default(uuid())
    tags          UploadTag[]

    @@index([uploaderId], name: "uploaderId")
    @@index([name], name: "name")
    @@index([fileName], name: "fileName")
}

model UploadTag {
    id     String   @id @default(uuid())
    name   String
    color  String?
    icon   String?
    upload Upload[]
}

model IntergationToken {
    id        String    @id @default(uuid())
    tokenHash String
    label     String    @default("Intergation Token")
    lastUsed  DateTime?
    expiresAt DateTime?
    isNever   Boolean   @default(true) // aka never expires
    isRevoked Boolean   @default(false)
    user      User      @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt

    @@index([tokenHash], name: "tokenHash")
    @@index([userId], name: "userId")
}

model ActionLog {
    id        String   @id @default(uuid())
    action    String
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId], name: "userId")
}
